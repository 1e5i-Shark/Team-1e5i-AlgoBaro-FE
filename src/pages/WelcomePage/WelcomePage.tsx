import 'aos/dist/aos.css';

import ArrowForwardIosRoundedIcon from '@mui/icons-material/ArrowForwardIosRounded';
import AOS from 'aos';
import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { v4 } from 'uuid';

import { Button, Image, Spinner, ThemeModeToggleButton } from '@/components';
import LoginForm from '@/components/LoginForm/LoginForm';
import { LOCAL_ACCESSTOKEN } from '@/constants/localStorageKey';
import { useMyInfo } from '@/hooks/Api/useMembers';
import { useCustomTheme } from '@/hooks/useCustomTheme';
import { useLocalStorage } from '@/hooks/useLocalStorage';
import { PATH } from '@/routes/path';

import * as S from './WelcomePage.style';

export default function WelcomePage() {
  const { theme } = useCustomTheme();
  const navigate = useNavigate();
  const { data: myInfo, refetch } = useMyInfo();
  const [accessToken] = useLocalStorage(LOCAL_ACCESSTOKEN);
  // Ïú†Ï†Ä ÎãâÎÑ§ÏûÑ ÏøºÎ¶¨ Ìò∏Ï∂ú ÏóÖÎç∞Ïù¥Ìä∏
  const myNickName = myInfo?.response.nickname;

  // Todo: ÏïÑÏù¥ÏΩò Ï†ïÌïòÍ∏∞
  const mainSubItems = [
    '‚è≤ ÏãúÍ∞Ñ Î∞è Í≥µÍ∞Ñ ÎπÑÏö© ÏµúÏÜåÌôî',
    '‚å®Ô∏è Ïã§Ï†Ñ ÎåÄÎπÑÎ•º ÏúÑÌïú Î™®Ïùò ÏΩîÎî©ÌÖåÏä§Ìä∏',
    'üí¨ ÏΩîÎìú ÌíÄÏù¥ Í≥µÏú† Ïä§ÌÑ∞Îîî',
  ];
  const moreDetailItems = [
    {
      imageUrl: '/assets/moreDetail/HomePage.webp',
      title: 'ÏÑ†Ìò∏ÌïòÎäî Ïñ∏Ïñ¥Î°ú \n Ìï®Íªò Î¨∏Ï†úÎ•º ÌíÄÏñ¥Î≥¥ÏÑ∏Ïöî',
      description: [
        'ÎßûÏ∂§Ìòï Î∞©ÏùÑ Ï∞æÏïÑ ÏÇ¨ÎûåÎì§Í≥º Ìï®Íªò Î¨∏Ï†úÎ•º ÌíÄÏñ¥Î≥¥ÏÑ∏Ïöî.',
        'Í≤ÄÏÉâ ÎòêÎäî ÌïÑÌÑ∞ÎßÅ Í∏∞Îä•ÏùÑ ÌÜµÌï¥ Ï∞æÍ≥† Ïã∂ÏùÄ Î∞©ÏùÑ \nÏâΩÍ≤å Ï∞æÏùÑ Ïàò ÏûàÏñ¥Ïöî.',
      ],
    },
    {
      imageUrl: '/assets/moreDetail/RoomPage.webp',
      title: 'Ï±ÑÌåÖÏùÑ ÌÜµÌï¥ ÏÜåÌÜµÌïòÍ≥† \nÌï®Íªò Î¨∏Ï†úÎ•º ÌíÄÏñ¥Î≥¥ÏÑ∏Ïöî',
      description: [
        'ÎèôÎ£åÎì§Í≥º Î¨∏Ï†ú ÌíÄÏù¥Î•º ÏãúÏûëÌï¥ Î≥¥ÏÑ∏Ïöî.',
        'ÌíÄÏù¥Ìï† Î¨∏Ï†úÏôÄ Ï†úÌïú ÏãúÍ∞ÑÏùÑ ÌåÄÏõêÎì§Í≥º ÏÉÅÏùòÌïòÍ≥† \nÎ∞©Ïû•Ïù¥ Ï†ïÎ≥¥Î•º ÏàòÏ†ïÌï¥Ïöî.',
      ],
    },
    {
      imageUrl: '/assets/moreDetail/SolvePage.webp',
      title: 'Ïã§Ï†ú ÏãúÌóò ÌôòÍ≤ΩÏóêÏÑú \n Î¨∏Ï†úÎ•º Ìï¥Í≤∞Ìï¥ Î≥¥ÏÑ∏Ïöî.',
      description: [
        'Ïã§Ï†Ñ ÏΩîÎî© ÌÖåÏä§Ìä∏ÏôÄ Ïú†ÏÇ¨Ìïú ÌôòÍ≤ΩÏóêÏÑú Ïó∞ÏäµÌï† Ïàò ÏûàÏñ¥Ïöî!',
        'Î∞±Ï§Ä Î¨∏Ï†ú ÎßÅÌÅ¨Î•º ÏûÖÎ†•ÌïòÎ©¥ Î¨∏Ï†úÍ∞Ä ÌëúÏãúÎêòÍ≥† \n ÌÖåÏä§Ìä∏ ÏºÄÏù¥Ïä§Î•º ÏßÅÏ†ë ÏûÖÎ†•ÌïòÏó¨ Ïã§ÌñâÏùÑ Ìï† Ïàò ÏûàÏñ¥Ïöî.',
      ],
    },
    {
      imageUrl: '/assets/moreDetail/SharePage.webp',
      title: 'ÏΩîÎìúÎ•º Í≥µÏú†ÌïòÍ≥† \n ÏÉàÎ°úÏö¥ Ìï¥Í≤∞ Î∞©Î≤ïÎì§ÏùÑ \n Î∞∞ÏõåÎ≥¥ÏÑ∏Ïöî',
      description: [
        'ÏßÄÏãù Í≥µÏú†Îäî Î∞úÏ†ÑÏùò ÏõêÎèôÎ†•ÏûÖÎãàÎã§. \nÎã§Î•∏ Ï∞∏Í∞ÄÏûêÎì§Ïùò ÌíÄÏù¥ÏóêÏÑú ÏòÅÍ∞êÏùÑ ÏñªÏñ¥Î≥¥ÏÑ∏Ïöî.',
        'Î¨∏Ï†ú Ìï¥Í≤∞ Î∞©Î≤ïÏùÑ Îã§Î•∏ Ï∞∏Í∞ÄÏûêÎì§Í≥º Í≥µÏú†ÌïòÍ≥† \nÎã§ÏñëÌïú Ìï¥Í≤∞ Î∞©Î≤ïÏùÑ Î∞∞Ïö∏ Ïàò ÏûàÏäµÎãàÎã§.',
      ],
    },
  ];
  // ÌôàÏúºÎ°ú Í∞ÄÍ∏∞ Î≤ÑÌäº ÎèôÏûëÏóê ÎåÄÌïú Ìï®Ïàò
  const goHome = () => {
    navigate(PATH.HOME);
  };

  // AccessTokenÏù¥ ÏûàÏúºÎ©¥ÏÑú myInfo Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏúºÎ©¥ refetch
  if (accessToken && !myInfo) {
    refetch();
  }

  useEffect(() => {
    AOS.init();
  }, []);

  return (
    <S.WelcomePageWrapper>
      <S.MainContainer>
        <S.MainLeftContainer>
          <S.MainTitleContainer>
            <Image
              src="/assets/logo.png"
              alt="logo"
              height="6rem"
              priority={true}
            />
            <Image
              src={`/assets/logo-text-${theme.mode}.png`}
              alt="logo-text"
              height="3.5rem"
              priority={true}
            />
          </S.MainTitleContainer>
          <S.MainSubTitleText>Î∞îÎ°úÎ∞îÎ°ú Ìï®Íªò Ìë∏Îäî ÏïåÍ≥†Î¶¨Ï¶ò</S.MainSubTitleText>
          <S.MainSubList>
            {mainSubItems.map(item => {
              return <S.MainSubListItem key={v4()}>{item}</S.MainSubListItem>;
            })}
          </S.MainSubList>
        </S.MainLeftContainer>
        <S.MainRightContainer>
          {accessToken && (
            <>
              <S.UserNameContainer>
                {myNickName ? (
                  <>
                    <S.UserNickName>{myNickName}</S.UserNickName> Îãò
                  </>
                ) : (
                  <Spinner size="XXS" />
                )}
              </S.UserNameContainer>
              <Button onClick={goHome}>
                ÌôàÏúºÎ°ú
                <ArrowForwardIosRoundedIcon />
              </Button>
            </>
          )}
        </S.MainRightContainer>
        <LoginForm width="25%" />
      </S.MainContainer>
      <S.MoreDetailContainer>
        <S.MoreDetailList>
          {/* ‚≠£ ‚á© ‚¨á ‚á£ ‚áä ‚áÇ ‚Ü° ‚§µ */}
          <S.MoreDetailTitle>
            AlgoBaroÍ∞Ä Í∂ÅÍ∏àÌïòÏã†Í∞ÄÏöî?{'   '}
            <span
              style={{
                position: 'absolute',
                top: '2px',
                transform: 'translateX(10px)',
              }}
            >
              ‚¨á
            </span>
          </S.MoreDetailTitle>
          {moreDetailItems.map((item, index) => {
            return (
              <S.DetailItem
                data-aos={index % 2 === 0 ? 'fade-right' : 'fade-left'}
                key={v4()}
              >
                <img src={item.imageUrl} />
                <S.DetailContents>
                  <S.DetailTitle>{item.title}</S.DetailTitle>
                  <S.DetailDescriptionList>
                    {item.description.map(description => {
                      return (
                        <S.DetailDescriptionItem key={v4()}>
                          {description}
                        </S.DetailDescriptionItem>
                      );
                    })}
                  </S.DetailDescriptionList>
                </S.DetailContents>
              </S.DetailItem>
            );
          })}
        </S.MoreDetailList>
      </S.MoreDetailContainer>
      <S.DarkModeButtonContainer>
        <ThemeModeToggleButton></ThemeModeToggleButton>
      </S.DarkModeButtonContainer>
    </S.WelcomePageWrapper>
  );
}
